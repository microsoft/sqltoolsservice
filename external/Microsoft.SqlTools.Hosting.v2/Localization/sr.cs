// WARNING:
// This file was generated by the Microsoft DataWarehouse String Resource Tool 6.0.0.0
// from information in sr.strings
// DO NOT MODIFY THIS FILE'S CONTENTS, THEY WILL BE OVERWRITTEN
//
namespace Microsoft.SqlTools.Hosting.v2
{
    using System;
    using System.Reflection;
    using System.Resources;
    using System.Globalization;

    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SR
    {
        protected SR()
        { }

        public static CultureInfo Culture
        {
            get
            {
                return Keys.Culture;
            }
            set
            {
                Keys.Culture = value;
            }
        }


        public static string ServiceAlreadyRegistered
        {
            get
            {
                return Keys.GetString(Keys.ServiceAlreadyRegistered);
            }
        }

        public static string MultipleServicesFound
        {
            get
            {
                return Keys.GetString(Keys.MultipleServicesFound);
            }
        }

        public static string IncompatibleServiceForExtensionLoader
        {
            get
            {
                return Keys.GetString(Keys.IncompatibleServiceForExtensionLoader);
            }
        }

        public static string ServiceProviderNotSet
        {
            get
            {
                return Keys.GetString(Keys.ServiceProviderNotSet);
            }
        }

        public static string ServiceNotFound
        {
            get
            {
                return Keys.GetString(Keys.ServiceNotFound);
            }
        }

        public static string ServiceNotOfExpectedType
        {
            get
            {
                return Keys.GetString(Keys.ServiceNotOfExpectedType);
            }
        }

        public static string HostingUnexpectedEndOfStream
        {
            get
            {
                return Keys.GetString(Keys.HostingUnexpectedEndOfStream);
            }
        }

        public static string HostingHeaderMissingColon
        {
            get
            {
                return Keys.GetString(Keys.HostingHeaderMissingColon);
            }
        }

        public static string HostingHeaderMissingContentLengthHeader
        {
            get
            {
                return Keys.GetString(Keys.HostingHeaderMissingContentLengthHeader);
            }
        }

        public static string HostingHeaderMissingContentLengthValue
        {
            get
            {
                return Keys.GetString(Keys.HostingHeaderMissingContentLengthValue);
            }
        }

        public static string HostingJsonRpcHostAlreadyStarted
        {
            get
            {
                return Keys.GetString(Keys.HostingJsonRpcHostAlreadyStarted);
            }
        }

        public static string HostingJsonRpcHostNotStarted
        {
            get
            {
                return Keys.GetString(Keys.HostingJsonRpcHostNotStarted);
            }
        }

        public static string HostingJsonRpcVersionMissing
        {
            get
            {
                return Keys.GetString(Keys.HostingJsonRpcVersionMissing);
            }
        }

        public static string HostingMessageMissingMethod
        {
            get
            {
                return Keys.GetString(Keys.HostingMessageMissingMethod);
            }
        }

        public static string HostingMethodHandlerDoesNotExist(string messageType, string method)
        {
            return Keys.GetString(Keys.HostingMethodHandlerDoesNotExist, messageType, method);
        }

        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class Keys
        {
            static ResourceManager resourceManager = new ResourceManager("Microsoft.SqlTools.Hosting.v2.Localization.SR", typeof(SR).GetTypeInfo().Assembly);

            static CultureInfo _culture = null;


            public const string ServiceAlreadyRegistered = "ServiceAlreadyRegistered";


            public const string MultipleServicesFound = "MultipleServicesFound";


            public const string IncompatibleServiceForExtensionLoader = "IncompatibleServiceForExtensionLoader";


            public const string ServiceProviderNotSet = "ServiceProviderNotSet";


            public const string ServiceNotFound = "ServiceNotFound";


            public const string ServiceNotOfExpectedType = "ServiceNotOfExpectedType";


            public const string HostingUnexpectedEndOfStream = "HostingUnexpectedEndOfStream";


            public const string HostingHeaderMissingColon = "HostingHeaderMissingColon";


            public const string HostingHeaderMissingContentLengthHeader = "HostingHeaderMissingContentLengthHeader";


            public const string HostingHeaderMissingContentLengthValue = "HostingHeaderMissingContentLengthValue";


            public const string HostingJsonRpcHostAlreadyStarted = "HostingJsonRpcHostAlreadyStarted";


            public const string HostingJsonRpcHostNotStarted = "HostingJsonRpcHostNotStarted";


            public const string HostingJsonRpcVersionMissing = "HostingJsonRpcVersionMissing";


            public const string HostingMessageMissingMethod = "HostingMessageMissingMethod";


            public const string HostingMethodHandlerDoesNotExist = "HostingMethodHandlerDoesNotExist";


            private Keys()
            { }

            public static CultureInfo Culture
            {
                get
                {
                    return _culture;
                }
                set
                {
                    _culture = value;
                }
            }

            public static string GetString(string key)
            {
                return resourceManager.GetString(key, _culture);
            }


            public static string GetString(string key, object arg0, object arg1)
            {
                return string.Format(global::System.Globalization.CultureInfo.CurrentCulture, resourceManager.GetString(key, _culture), arg0, arg1);
            }

        }
    }
}
