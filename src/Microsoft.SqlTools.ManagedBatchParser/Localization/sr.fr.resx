<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EE_BatchSqlMessageNoProcedureInfo" xml:space="preserve">
    <value>Msg {0}, Niveau {1}, État {2}, Ligne {3}</value>
  </data>
  <data name="EE_BatchSqlMessageWithProcedureInfo" xml:space="preserve">
    <value>Msg {0}, Niveau {1}, État {2}, Procédure {3}, Ligne {4}</value>
  </data>
  <data name="EE_BatchSqlMessageNoLineInfo" xml:space="preserve">
    <value>Msg {0}, Niveau {1}, État {2}</value>
  </data>
  <data name="EE_BatchError_Exception" xml:space="preserve">
    <value>Une erreur s'est produite lors du traitement du lot. Le message d'erreur est : {0}</value>
  </data>
  <data name="EE_BatchExecutionInfo_RowsAffected" xml:space="preserve">
    <value>({0} ligne(s) affectée(s))</value>
  </data>
  <data name="EE_ExecutionNotYetCompleteError" xml:space="preserve">
    <value>L'exécution précédente n'est pas encore terminée.</value>
  </data>
  <data name="EE_ScriptError_Error" xml:space="preserve">
    <value>Une erreur de script s'est produite.</value>
  </data>
  <data name="EE_ScriptError_ParsingSyntax" xml:space="preserve">
    <value>Une syntaxe incorrecte a été trouvée lors de l'analyse de {0}.</value>
  </data>
  <data name="EE_ScriptError_FatalError" xml:space="preserve">
    <value>Une erreur irrécupérable s'est produite.</value>
  </data>
  <data name="EE_ExecutionInfo_FinalizingLoop" xml:space="preserve">
    <value>Exécution du lot effectuée {0} fois ...</value>
  </data>
  <data name="EE_ExecutionInfo_QueryCancelledbyUser" xml:space="preserve">
    <value>Vous avez annulé la requête.</value>
  </data>
  <data name="EE_BatchExecutionError_Halting" xml:space="preserve">
    <value>Une erreur s'est produite lors de l'exécution du lot.</value>
  </data>
  <data name="EE_BatchExecutionError_Ignoring" xml:space="preserve">
    <value>Une erreur s'est produite pendant l'exécution du lot, mais elle a été ignorée.</value>
  </data>
  <data name="EE_ExecutionInfo_InitializingLoop" xml:space="preserve">
    <value>Démarrage de la boucle d'exécution</value>
  </data>
  <data name="EE_ExecutionError_CommandNotSupported" xml:space="preserve">
    <value>La commande {0} n'est pas prise en charge.</value>
  </data>
  <data name="EE_ExecutionError_VariableNotFound" xml:space="preserve">
    <value>Impossible de trouver la variable {0}.</value>
  </data>
  <data name="BatchParserWrapperExecutionEngineError" xml:space="preserve">
    <value>Erreur d'exécution SQL : {0}</value>
  </data>
  <data name="BatchParserWrapperExecutionError" xml:space="preserve">
    <value>Exécution du wrapper de l'analyseur de lot : {0} trouvé... à la ligne {1} : {2}    Description : {3}</value>
  </data>
  <data name="BatchParserWrapperExecutionEngineBatchMessage" xml:space="preserve">
    <value>Message reçu du lot du moteur d'exécution du wrapper de l'analyseur du lot : Message : {0}    Message détaillé : {1}</value>
  </data>
  <data name="BatchParserWrapperExecutionEngineBatchResultSetProcessing" xml:space="preserve">
    <value>Traitement du ResultSet du lot du moteur d'exécution du wrapper de l'analyseur du lot : DataReader.FieldCount : {0}  DataReader.RecordsAffected : {1}</value>
  </data>
  <data name="BatchParserWrapperExecutionEngineBatchResultSetFinished" xml:space="preserve">
    <value>ResultSet du lot du moteur d'exécution du wrapper de l'analyseur du lot terminé.</value>
  </data>
  <data name="BatchParserWrapperExecutionEngineBatchCancelling" xml:space="preserve">
    <value>Annulation de l'exécution du lot du wrapper de l'analyseur du lot.</value>
  </data>
  <data name="EE_ScriptError_Warning" xml:space="preserve">
    <value>Avertissement pour le script.</value>
  </data>
  <data name="TroubleshootingAssistanceMessage" xml:space="preserve">
    <value>Pour plus d'informations sur cette erreur, consultez les rubriques de dépannage dans la documentation du produit.</value>
  </data>
  <data name="BatchParser_CircularReference" xml:space="preserve">
    <value>Le fichier '{0}' a été inclus de manière récursive.</value>
  </data>
  <data name="BatchParser_CommentNotTerminated" xml:space="preserve">
    <value>La marque de commentaire de fin '*/' est manquante.</value>
  </data>
  <data name="BatchParser_StringNotTerminated" xml:space="preserve">
    <value>Guillemets non fermés après la chaîne de caractères.</value>
  </data>
  <data name="BatchParser_IncorrectSyntax" xml:space="preserve">
    <value>Détection d'une syntaxe incorrecte pendant l'analyse de '{0}'.</value>
  </data>
  <data name="BatchParser_VariableNotDefined" xml:space="preserve">
    <value>La variable {0} n'est pas définie.</value>
  </data>
  <data name="SqlCmd_PathInvalid" xml:space="preserve">
    <value>Le chemin d'accès contient des caractères non valides.</value>
  </data>
  <data name="SqlCmd_PathLong" xml:space="preserve">
    <value>Chemin trop long.</value>
  </data>
  <data name="SqlCmd_FailedInclude" xml:space="preserve">
    <value>Impossible de trouver le {0} de fichier inclus.</value>
  </data>
</root>