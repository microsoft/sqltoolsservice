<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EE_BatchSqlMessageNoProcedureInfo" xml:space="preserve">
    <value>메시지 {0}, 수준 {1}, 상태 {2}, 줄 {3}</value>
  </data>
  <data name="EE_BatchSqlMessageWithProcedureInfo" xml:space="preserve">
    <value>메시지 {0}, 수준 {1}, 상태 {2}, 프로시저 {3}, 줄 {4}</value>
  </data>
  <data name="EE_BatchSqlMessageNoLineInfo" xml:space="preserve">
    <value>메시지 {0}, 수준 {1}, 상태 {2}</value>
  </data>
  <data name="EE_BatchError_Exception" xml:space="preserve">
    <value>일괄 처리 작업을 처리하는 동안 오류가 발생했습니다. 오류 메시지: {0}</value>
  </data>
  <data name="EE_BatchExecutionInfo_RowsAffected" xml:space="preserve">
    <value>({0}개 행이 영향을 받음)</value>
  </data>
  <data name="EE_ExecutionNotYetCompleteError" xml:space="preserve">
    <value>이전 실행이 아직 완료되지 않았습니다.</value>
  </data>
  <data name="EE_ScriptError_Error" xml:space="preserve">
    <value>스크립팅 오류가 발생했습니다.</value>
  </data>
  <data name="EE_ScriptError_ParsingSyntax" xml:space="preserve">
    <value>{0}을(를) 구문 분석하는 동안 잘못된 구문을 발견했습니다.</value>
  </data>
  <data name="EE_ScriptError_FatalError" xml:space="preserve">
    <value>오류가 발생했습니다.</value>
  </data>
  <data name="EE_ExecutionInfo_FinalizingLoop" xml:space="preserve">
    <value>일괄 처리 실행이 {0}번 완료되었습니다.</value>
  </data>
  <data name="EE_ExecutionInfo_QueryCancelledbyUser" xml:space="preserve">
    <value>사용자가 쿼리를 취소했습니다.</value>
  </data>
  <data name="EE_BatchExecutionError_Halting" xml:space="preserve">
    <value>일괄 처리를 실행하는 동안 오류가 발생했습니다.</value>
  </data>
  <data name="EE_BatchExecutionError_Ignoring" xml:space="preserve">
    <value>일괄 처리를 실행하는 동안 오류가 발생했지만 무시되었습니다.</value>
  </data>
  <data name="EE_ExecutionInfo_InitializingLoop" xml:space="preserve">
    <value>실행 루프 시작</value>
  </data>
  <data name="EE_ExecutionError_CommandNotSupported" xml:space="preserve">
    <value>{0} 명령이 지원되지 않습니다.</value>
  </data>
  <data name="EE_ExecutionError_VariableNotFound" xml:space="preserve">
    <value>{0} 변수를 찾을 수 없습니다.</value>
  </data>
  <data name="BatchParserWrapperExecutionEngineError" xml:space="preserve">
    <value>SQL 실행 오류: {0}</value>
  </data>
  <data name="BatchParserWrapperExecutionError" xml:space="preserve">
    <value>일괄 처리 파서 래퍼 실행: {0} 찾음... 줄 {1}: {2} 설명: {3}</value>
  </data>
  <data name="BatchParserWrapperExecutionEngineBatchMessage" xml:space="preserve">
    <value>일괄 처리 파서 래퍼 실행 엔진 일괄 처리 메시지를 받았습니다. 메시지: {0} 자세한 메시지: {1}</value>
  </data>
  <data name="BatchParserWrapperExecutionEngineBatchResultSetProcessing" xml:space="preserve">
    <value>일괄 처리 파서 래퍼 실행 엔진 일괄 처리 ResultSet을 처리하고 있습니다. DataReader.FieldCount: {0} DataReader.RecordsAffected: {1}</value>
  </data>
  <data name="BatchParserWrapperExecutionEngineBatchResultSetFinished" xml:space="preserve">
    <value>일괄 처리 파서 래퍼 실행 엔진 일괄 처리 ResultSet을 완료했습니다.</value>
  </data>
  <data name="BatchParserWrapperExecutionEngineBatchCancelling" xml:space="preserve">
    <value>일괄 처리 파서 래퍼 일괄 처리 실행을 취소하고 있습니다.</value>
  </data>
  <data name="EE_ScriptError_Warning" xml:space="preserve">
    <value>스크립팅 경고입니다.</value>
  </data>
  <data name="TroubleshootingAssistanceMessage" xml:space="preserve">
    <value>이 오류에 대한 자세한 내용은 제품 설명서의 문제 해결 항목을 참조하십시오.</value>
  </data>
  <data name="BatchParser_CircularReference" xml:space="preserve">
    <value>파일 '{0}'이(가) 재귀적으로 포함되었습니다.</value>
  </data>
  <data name="BatchParser_CommentNotTerminated" xml:space="preserve">
    <value>주석 끝 표시 '*/'가 없습니다.</value>
  </data>
  <data name="BatchParser_StringNotTerminated" xml:space="preserve">
    <value>문자열의 따옴표가 짝이 맞지 않습니다.</value>
  </data>
  <data name="BatchParser_IncorrectSyntax" xml:space="preserve">
    <value>'{0}'을(를) 구문 분석하는 동안 잘못된 구문을 발견했습니다.</value>
  </data>
  <data name="BatchParser_VariableNotDefined" xml:space="preserve">
    <value>변수 {0}이(가) 정의되지 않았습니다.</value>
  </data>
  <data name="SqlCmd_PathInvalid" xml:space="preserve">
    <value>경로에 잘못된 문자가 포함되어 있습니다.</value>
  </data>
  <data name="SqlCmd_PathLong" xml:space="preserve">
    <value>경로가 너무 깁니다.</value>
  </data>
  <data name="SqlCmd_FailedInclude" xml:space="preserve">
    <value>포함된 {0} 파일을 찾을 수 없습니다.</value>
  </data>
</root>