<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EE_BatchSqlMessageNoProcedureInfo" xml:space="preserve">
    <value>Mens. {0}, Nivel {1}, Estado {2}, Línea {3}</value>
  </data>
  <data name="EE_BatchSqlMessageWithProcedureInfo" xml:space="preserve">
    <value>Mensaje {0}, Nivel {1}, Estado {2}, Procedimiento {3}, Línea {4}</value>
  </data>
  <data name="EE_BatchSqlMessageNoLineInfo" xml:space="preserve">
    <value>Mens. {0}, nivel {1}, estado {2}</value>
  </data>
  <data name="EE_BatchError_Exception" xml:space="preserve">
    <value>Error al procesar el lote. El mensaje de error es: {0}</value>
  </data>
  <data name="EE_BatchExecutionInfo_RowsAffected" xml:space="preserve">
    <value>({0} filas afectadas)</value>
  </data>
  <data name="EE_ExecutionNotYetCompleteError" xml:space="preserve">
    <value>Aún no se ha completado la ejecución anterior.</value>
  </data>
  <data name="EE_ScriptError_Error" xml:space="preserve">
    <value>Error de scripting.</value>
  </data>
  <data name="EE_ScriptError_ParsingSyntax" xml:space="preserve">
    <value>Se encontró sintaxis incorrecta al analizar {0}.</value>
  </data>
  <data name="EE_ScriptError_FatalError" xml:space="preserve">
    <value>Error irrecuperable.</value>
  </data>
  <data name="EE_ExecutionInfo_FinalizingLoop" xml:space="preserve">
    <value>Ejecución de lotes completada {0} veces...</value>
  </data>
  <data name="EE_ExecutionInfo_QueryCancelledbyUser" xml:space="preserve">
    <value>Ha cancelado la consulta.</value>
  </data>
  <data name="EE_BatchExecutionError_Halting" xml:space="preserve">
    <value>Error al ejecutar el lote.</value>
  </data>
  <data name="EE_BatchExecutionError_Ignoring" xml:space="preserve">
    <value>Error al ejecutar el lote, pero se ignoró.</value>
  </data>
  <data name="EE_ExecutionInfo_InitializingLoop" xml:space="preserve">
    <value>Iniciando bucle de ejecución</value>
  </data>
  <data name="EE_ExecutionError_CommandNotSupported" xml:space="preserve">
    <value>No se admite el comando {0}.</value>
  </data>
  <data name="EE_ExecutionError_VariableNotFound" xml:space="preserve">
    <value>No se encuentra la variable {0}.</value>
  </data>
  <data name="BatchParserWrapperExecutionEngineError" xml:space="preserve">
    <value>Error de ejecución de SQL: {0}</value>
  </data>
  <data name="BatchParserWrapperExecutionError" xml:space="preserve">
    <value>Ejecución del contenedor del analizador por lotes: {0} encontrados en la línea {1}: {2} Descripción: {3}</value>
  </data>
  <data name="BatchParserWrapperExecutionEngineBatchMessage" xml:space="preserve">
    <value>Mensaje recibido por el lote del motor de ejecución del contenedor del analizador por lotes: mensaje {0}, mensaje detallado: {1}</value>
  </data>
  <data name="BatchParserWrapperExecutionEngineBatchResultSetProcessing" xml:space="preserve">
    <value>Procesamiento de ResultSet por lotes del motor de ejecución del contenedor del analizador por lotes: DataReader.FieldCount: {0} DataReader.RecordsAffected: {1}</value>
  </data>
  <data name="BatchParserWrapperExecutionEngineBatchResultSetFinished" xml:space="preserve">
    <value>Finalizó el elemento ResultSet por lotes del motor de ejecución del contenedor del analizador por lotes.</value>
  </data>
  <data name="BatchParserWrapperExecutionEngineBatchCancelling" xml:space="preserve">
    <value>Se está cancelando la ejecución por lotes del contenedor del analizador por lotes.</value>
  </data>
  <data name="EE_ScriptError_Warning" xml:space="preserve">
    <value>Advertencia de scripting.</value>
  </data>
  <data name="TroubleshootingAssistanceMessage" xml:space="preserve">
    <value>Para obtener más información acerca de este error, consulte los temas de resolución de problemas en la documentación del producto.</value>
  </data>
  <data name="BatchParser_CircularReference" xml:space="preserve">
    <value>El archivo '{0}' se incluyó de forma recursiva.</value>
  </data>
  <data name="BatchParser_CommentNotTerminated" xml:space="preserve">
    <value>Falta la marca de fin del comentario '*/'.</value>
  </data>
  <data name="BatchParser_StringNotTerminated" xml:space="preserve">
    <value>Comillas sin cerrar a continuación de la cadena de caracteres.</value>
  </data>
  <data name="BatchParser_IncorrectSyntax" xml:space="preserve">
    <value>Se encontró un sintaxis incorrecta al analizar '{0}'.</value>
  </data>
  <data name="BatchParser_VariableNotDefined" xml:space="preserve">
    <value>La variable {0} no está definida.</value>
  </data>
  <data name="SqlCmd_PathInvalid" xml:space="preserve">
    <value>La ruta de acceso contiene caracteres no válidos.</value>
  </data>
  <data name="SqlCmd_PathLong" xml:space="preserve">
    <value>La ruta de acceso es demasiado larga.</value>
  </data>
  <data name="SqlCmd_FailedInclude" xml:space="preserve">
    <value>No se pudo encontrar el archivo incluido {0}.</value>
  </data>
  <data name="NullEmptyOrWhitespaceString" xml:space="preserve">
    <value>El parámetro contiene una cadena nula, vacía o con espacios en blanco.</value>
  </data>
</root>