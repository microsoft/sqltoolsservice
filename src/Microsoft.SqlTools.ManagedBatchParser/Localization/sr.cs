// WARNING:
// This file was generated by the Microsoft DataWarehouse String Resource Tool 5.0.0.0
// from information in sr.strings
// DO NOT MODIFY THIS FILE'S CONTENTS, THEY WILL BE OVERWRITTEN
//
namespace Microsoft.SqlTools.ManagedBatchParser
{
    using System;
    using System.Reflection;
    using System.Resources;
    using System.Globalization;

    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SR
    {
        protected SR()
        { }

        public static CultureInfo Culture
        {
            get
            {
                return Keys.Culture;
            }
            set
            {
                Keys.Culture = value;
            }
        }


        public static string EE_BatchSqlMessageNoProcedureInfo
        {
            get
            {
                return Keys.GetString(Keys.EE_BatchSqlMessageNoProcedureInfo);
            }
        }

        public static string EE_BatchSqlMessageWithProcedureInfo
        {
            get
            {
                return Keys.GetString(Keys.EE_BatchSqlMessageWithProcedureInfo);
            }
        }

        public static string EE_BatchSqlMessageNoLineInfo
        {
            get
            {
                return Keys.GetString(Keys.EE_BatchSqlMessageNoLineInfo);
            }
        }

        public static string EE_BatchError_Exception
        {
            get
            {
                return Keys.GetString(Keys.EE_BatchError_Exception);
            }
        }

        public static string EE_BatchExecutionInfo_RowsAffected
        {
            get
            {
                return Keys.GetString(Keys.EE_BatchExecutionInfo_RowsAffected);
            }
        }

        public static string EE_ExecutionNotYetCompleteError
        {
            get
            {
                return Keys.GetString(Keys.EE_ExecutionNotYetCompleteError);
            }
        }

        public static string EE_ScriptError_Error
        {
            get
            {
                return Keys.GetString(Keys.EE_ScriptError_Error);
            }
        }

        public static string EE_ScriptError_ParsingSyntax
        {
            get
            {
                return Keys.GetString(Keys.EE_ScriptError_ParsingSyntax);
            }
        }

        public static string EE_ScriptError_FatalError
        {
            get
            {
                return Keys.GetString(Keys.EE_ScriptError_FatalError);
            }
        }

        public static string EE_ExecutionInfo_FinalizingLoop
        {
            get
            {
                return Keys.GetString(Keys.EE_ExecutionInfo_FinalizingLoop);
            }
        }

        public static string EE_ExecutionInfo_QueryCancelledbyUser
        {
            get
            {
                return Keys.GetString(Keys.EE_ExecutionInfo_QueryCancelledbyUser);
            }
        }

        public static string EE_BatchExecutionError_Halting
        {
            get
            {
                return Keys.GetString(Keys.EE_BatchExecutionError_Halting);
            }
        }

        public static string EE_BatchExecutionError_Ignoring
        {
            get
            {
                return Keys.GetString(Keys.EE_BatchExecutionError_Ignoring);
            }
        }

        public static string EE_ExecutionInfo_InitializingLoop
        {
            get
            {
                return Keys.GetString(Keys.EE_ExecutionInfo_InitializingLoop);
            }
        }

        public static string EE_ExecutionError_CommandNotSupported
        {
            get
            {
                return Keys.GetString(Keys.EE_ExecutionError_CommandNotSupported);
            }
        }

        public static string EE_ExecutionError_VariableNotFound
        {
            get
            {
                return Keys.GetString(Keys.EE_ExecutionError_VariableNotFound);
            }
        }

        public static string BatchParserWrapperExecutionEngineError
        {
            get
            {
                return Keys.GetString(Keys.BatchParserWrapperExecutionEngineError);
            }
        }

        public static string BatchParserWrapperExecutionError
        {
            get
            {
                return Keys.GetString(Keys.BatchParserWrapperExecutionError);
            }
        }

        public static string BatchParserWrapperExecutionEngineBatchMessage
        {
            get
            {
                return Keys.GetString(Keys.BatchParserWrapperExecutionEngineBatchMessage);
            }
        }

        public static string BatchParserWrapperExecutionEngineBatchResultSetProcessing
        {
            get
            {
                return Keys.GetString(Keys.BatchParserWrapperExecutionEngineBatchResultSetProcessing);
            }
        }

        public static string BatchParserWrapperExecutionEngineBatchResultSetFinished
        {
            get
            {
                return Keys.GetString(Keys.BatchParserWrapperExecutionEngineBatchResultSetFinished);
            }
        }

        public static string BatchParserWrapperExecutionEngineBatchCancelling
        {
            get
            {
                return Keys.GetString(Keys.BatchParserWrapperExecutionEngineBatchCancelling);
            }
        }

        public static string EE_ScriptError_Warning
        {
            get
            {
                return Keys.GetString(Keys.EE_ScriptError_Warning);
            }
        }

        public static string TroubleshootingAssistanceMessage
        {
            get
            {
                return Keys.GetString(Keys.TroubleshootingAssistanceMessage);
            }
        }

        public static string BatchParser_CircularReference
        {
            get
            {
                return Keys.GetString(Keys.BatchParser_CircularReference);
            }
        }

        public static string BatchParser_CommentNotTerminated
        {
            get
            {
                return Keys.GetString(Keys.BatchParser_CommentNotTerminated);
            }
        }

        public static string BatchParser_StringNotTerminated
        {
            get
            {
                return Keys.GetString(Keys.BatchParser_StringNotTerminated);
            }
        }

        public static string BatchParser_IncorrectSyntax
        {
            get
            {
                return Keys.GetString(Keys.BatchParser_IncorrectSyntax);
            }
        }

        public static string BatchParser_VariableNotDefined
        {
            get
            {
                return Keys.GetString(Keys.BatchParser_VariableNotDefined);
            }
        }

        public static string SqlCmd_PathInvalid
        {
            get
            {
                return Keys.GetString(Keys.SqlCmd_PathInvalid);
            }
        }

        public static string SqlCmd_PathLong
        {
            get
            {
                return Keys.GetString(Keys.SqlCmd_PathLong);
            }
        }

        public static string SqlCmd_FailedInclude
        {
            get
            {
                return Keys.GetString(Keys.SqlCmd_FailedInclude);
            }
        }

        public static string NullEmptyOrWhitespaceString
        {
            get
            {
                return Keys.GetString(Keys.NullEmptyOrWhitespaceString);
            }
        }

        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class Keys
        {
            static ResourceManager resourceManager = new ResourceManager("Microsoft.SqlTools.ManagedBatchParser.Localization.SR", typeof(SR).GetTypeInfo().Assembly);

            static CultureInfo _culture = null;


            public const string EE_BatchSqlMessageNoProcedureInfo = "EE_BatchSqlMessageNoProcedureInfo";


            public const string EE_BatchSqlMessageWithProcedureInfo = "EE_BatchSqlMessageWithProcedureInfo";


            public const string EE_BatchSqlMessageNoLineInfo = "EE_BatchSqlMessageNoLineInfo";


            public const string EE_BatchError_Exception = "EE_BatchError_Exception";


            public const string EE_BatchExecutionInfo_RowsAffected = "EE_BatchExecutionInfo_RowsAffected";


            public const string EE_ExecutionNotYetCompleteError = "EE_ExecutionNotYetCompleteError";


            public const string EE_ScriptError_Error = "EE_ScriptError_Error";


            public const string EE_ScriptError_ParsingSyntax = "EE_ScriptError_ParsingSyntax";


            public const string EE_ScriptError_FatalError = "EE_ScriptError_FatalError";


            public const string EE_ExecutionInfo_FinalizingLoop = "EE_ExecutionInfo_FinalizingLoop";


            public const string EE_ExecutionInfo_QueryCancelledbyUser = "EE_ExecutionInfo_QueryCancelledbyUser";


            public const string EE_BatchExecutionError_Halting = "EE_BatchExecutionError_Halting";


            public const string EE_BatchExecutionError_Ignoring = "EE_BatchExecutionError_Ignoring";


            public const string EE_ExecutionInfo_InitializingLoop = "EE_ExecutionInfo_InitializingLoop";


            public const string EE_ExecutionError_CommandNotSupported = "EE_ExecutionError_CommandNotSupported";


            public const string EE_ExecutionError_VariableNotFound = "EE_ExecutionError_VariableNotFound";


            public const string BatchParserWrapperExecutionEngineError = "BatchParserWrapperExecutionEngineError";


            public const string BatchParserWrapperExecutionError = "BatchParserWrapperExecutionError";


            public const string BatchParserWrapperExecutionEngineBatchMessage = "BatchParserWrapperExecutionEngineBatchMessage";


            public const string BatchParserWrapperExecutionEngineBatchResultSetProcessing = "BatchParserWrapperExecutionEngineBatchResultSetProcessing";


            public const string BatchParserWrapperExecutionEngineBatchResultSetFinished = "BatchParserWrapperExecutionEngineBatchResultSetFinished";


            public const string BatchParserWrapperExecutionEngineBatchCancelling = "BatchParserWrapperExecutionEngineBatchCancelling";


            public const string EE_ScriptError_Warning = "EE_ScriptError_Warning";


            public const string TroubleshootingAssistanceMessage = "TroubleshootingAssistanceMessage";


            public const string BatchParser_CircularReference = "BatchParser_CircularReference";


            public const string BatchParser_CommentNotTerminated = "BatchParser_CommentNotTerminated";


            public const string BatchParser_StringNotTerminated = "BatchParser_StringNotTerminated";


            public const string BatchParser_IncorrectSyntax = "BatchParser_IncorrectSyntax";


            public const string BatchParser_VariableNotDefined = "BatchParser_VariableNotDefined";


            public const string SqlCmd_PathInvalid = "SqlCmd_PathInvalid";


            public const string SqlCmd_PathLong = "SqlCmd_PathLong";


            public const string SqlCmd_FailedInclude = "SqlCmd_FailedInclude";


            public const string NullEmptyOrWhitespaceString = "NullEmptyOrWhitespaceString";


            private Keys()
            { }

            public static CultureInfo Culture
            {
                get
                {
                    return _culture;
                }
                set
                {
                    _culture = value;
                }
            }

            public static string GetString(string key)
            {
                return resourceManager.GetString(key, _culture);
            }

        }
    }
}
