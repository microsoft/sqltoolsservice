//
// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.
//

// This file was generated by a T4 Template. Do not modify directly, instead update the SmoQueryModelDefinition.xml file
// and re-run the T4 template. This can be done in Visual Studio by right-click in and choosing "Run Custom Tool",
// or from the command-line on any platform by running "build.cmd -Target=CodeGen" or "build.sh -Target=CodeGen".

namespace Microsoft.SqlTools.SqlCore.ObjectExplorer2
{
	/// <summary>
	/// Database Node
	/// </summary>
	public class DatabaseNode : TreeNode
	{
		public DatabaseNode() : base()
		{
			Icon = "Database";
			Type = "Database";
		}

		public override TreeNode[] GetChildren()
		{
			return new TreeNode[] { };
		}
	}
	/// <summary>
	/// Schema Node
	/// </summary>
	public class SchemaNode : TreeNode
	{
		public SchemaNode() : base()
		{
			Icon = "Schema";
			Type = "Schema";
		}

		public override TreeNode[] GetChildren()
		{
			return new TreeNode[] { };
		}
	}
	/// <summary>
	/// Table Node
	/// </summary>
	public class TableNode : TreeNode
	{
		public TableNode() : base()
		{
			Icon = "Table";
			Type = "Table";
		}

		public override TreeNode[] GetChildren()
		{
			return new TreeNode[] { };
		}
	}
	/// <summary>
	/// Column Node
	/// </summary>
	public class ColumnNode : TreeNode
	{
		public ColumnNode() : base()
		{
			Icon = "Column";
			Type = "Column";
		}

		public override TreeNode[] GetChildren()
		{
			return new TreeNode[] { };
		}
	}
	/// <summary>
	/// View Node
	/// </summary>
	public class ViewNode : TreeNode
	{
		public ViewNode() : base()
		{
			Icon = "View";
			Type = "View";
		}

		public override TreeNode[] GetChildren()
		{
			return new TreeNode[] { };
		}
	}
	/// <summary>
	/// Tables Folder
	/// </summary>
	public class TablesFolder : TreeNode
	{
		public TablesFolder() : base()
		{
			Label = SR.SchemaHierarchy_Tables;
			Type = "Folder";
			Icon = "Folder";
		}

		public override TreeNode[] GetChildren()
		{
			return new TreeNode[] { };
		}
	}
	/// <summary>
	/// TableColumns Folder
	/// </summary>
	public class TableColumnsFolder : TreeNode
	{
		public TableColumnsFolder() : base()
		{
			Label = SR.SchemaHierarchy_Columns;
			Type = "Folder";
			Icon = "Folder";
		}

		public override TreeNode[] GetChildren()
		{
			return new TreeNode[] { };
		}
	}
	/// <summary>
	/// Views Folder
	/// </summary>
	public class ViewsFolder : TreeNode
	{
		public ViewsFolder() : base()
		{
			Label = SR.SchemaHierarchy_Views;
			Type = "Folder";
			Icon = "Folder";
		}

		public override TreeNode[] GetChildren()
		{
			return new TreeNode[] { };
		}
	}
	/// <summary>
	/// ViewColumns Folder
	/// </summary>
	public class ViewColumnsFolder : TreeNode
	{
		public ViewColumnsFolder() : base()
		{
			Label = SR.SchemaHierarchy_Columns;
			Type = "Folder";
			Icon = "Folder";
		}

		public override TreeNode[] GetChildren()
		{
			return new TreeNode[] { };
		}
	}
	/// <summary>
	/// Schema Querier
	/// </summary>
	public class SchemaQuerier 
	{
		public querier
		public SchemaQuerier()
		{
		}
	}
	/// <summary>
	/// Table Querier
	/// </summary>
	public class TableQuerier 
	{
		public querier
		public TableQuerier()
		{
		}
	}
	/// <summary>
	/// TableColumn Querier
	/// </summary>
	public class TableColumnQuerier 
	{
		public querier
		public TableColumnQuerier()
		{
		}
	}
	/// <summary>
	/// View Querier
	/// </summary>
	public class ViewQuerier 
	{
		public querier
		public ViewQuerier()
		{
		}
	}
	/// <summary>
	/// ViewColumn Querier
	/// </summary>
	public class ViewColumnQuerier 
	{
		public querier
		public ViewColumnQuerier()
		{
		}
	}
	
}